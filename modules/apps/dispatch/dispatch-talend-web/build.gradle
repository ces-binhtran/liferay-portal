task deployDispatchSamples(type: Copy)

File dispatchTestSamplesDeployDir = file("${buildDir}/../test-classes/unit/tmp_talend_sample")

dependencies {
	compileOnly group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.1.0"
	compileOnly group: "com.liferay.portal", name: "com.liferay.portal.kernel", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.bridges", version: "default"
	compileOnly group: "com.liferay.portal", name: "com.liferay.util.taglib", version: "default"
	compileOnly group: "javax.portlet", name: "portlet-api", version: "3.0.1"
	compileOnly group: "org.apache.felix", name: "org.apache.felix.http.servlet-api", version: "1.1.2"
	compileOnly group: "org.osgi", name: "osgi.cmpn", version: "6.0.0"
	compileOnly group: "org.osgi", name: "osgi.core", version: "6.0.0"
	compileOnly project(":apps:dispatch:dispatch-api")
	compileOnly project(":apps:frontend-taglib:frontend-taglib")
	compileOnly project(":apps:static:portal-configuration:portal-configuration-metatype-api")
	compileOnly project(":apps:upload:upload-api")
	compileOnly project(":core:petra:petra-concurrent")
	compileOnly project(":core:petra:petra-io")
	compileOnly project(":core:petra:petra-lang")
	compileOnly project(":core:petra:petra-process")
	compileOnly project(":core:petra:petra-string")

	testCompile group: "com.liferay.portal", name: "com.liferay.portal.impl", version: "default"

	testRuntime ext: "zip", group: "com.liferay.etl", name: "etl-talend-context-printer-sample", version: "1.0"
}

deployDispatchSamples {

	description = "Assembles the dispatch test sample files and deploys it to test classpath."
	group "build"

	destinationDir = dispatchTestSamplesDeployDir

	if (!destinationDir.exists()) {
		destinationDir.mkdir()
	}

	from configurations.testRuntime

	include "*.zip"

}

test {
	dependsOn {
		configurations.testRuntime

		deployDispatchSamples
	}

	doLast {
		File destinationDir = dispatchTestSamplesDeployDir

		if (destinationDir.exists()) {
			for (File file: destinationDir.listFiles() ) {
				file.delete();
			}

			destinationDir.delete();

			logger.lifecycle "Removed Dispatch samples directory: {}", dispatchTestSamplesDeployDir
		}

	}
}