@component-name = "portal-commerce"
definition {

	property portal.release = "true";
	property portal.upstream = "quarantine";
	property testray.main.component.name = "Commerce";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		CommerceConfiguration.commerceStoreFrontSetUp();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			Navigator.openURL();

			CommerceNavigator.gotoPortlet(
				category = "Product Management",
				panel = "Commerce",
				portlet = "Options");

			if (IsElementPresent(locator1 = "CommerceEntry#DELETE_OPTION_BUTTON")) {

				CommerceOptions.deleteOptionsEntries();
			}

			CommerceNavigator.gotoPortlet(
				category = "Store Management",
				panel = "Commerce",
				portlet = "Channels");

			while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
				CommerceEntry.deleteCommerceEntry();
			}

			CommerceNavigator.gotoPortlet(
				category = "Product Management",
				panel = "Commerce",
				portlet = "Specifications");

			while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
				CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected specification labels?");
			}

			CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specification Groups");

			while (IsElementNotPresent(locator1 = "CommerceNavigation#EMPTY_SEARCH_CONTAINER")) {
				CommerceProducts.deleteEntries(deleteMessage = "Are you sure you want to delete the selected specification groups?");
			}

			CommerceNavigator.gotoPortlet(
				category = "Product Management",
				panel = "Commerce",
				portlet = "Products");

			while (IsElementPresent(locator1 = "CommerceEntry#BODY_VERTICAL_ELLIPSIS") && (maxIterations = "50")) {
				CommerceEntry.deleteCommerceEntry();
			}

			User.logoutPG();
		}
	}

	test ProductPublishing {
		property environment.acceptance = "quarantine";
		property portal.acceptance = "quarantine";

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Options");

		Pause(locator1 = "2000");

		CPCommerceCatalog.newOptionsEntry(
			optionDescription = "Option Description",
			optionFieldType = "Select from List",
			optionName = "Color",
			optionValuesList = "Black,Blue,White",
			valuePriority = "1");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Products");

		CPCommerceCatalog.newProductsEntry(
			productName = "Simple T-Shirt",
			productType = "Simple");

		CommerceEntry.gotoMenuTab(menuTab = "Options");

		CommerceRelations.assignSingleRelationToProductsEntry(
			entryName = "Color",
			title = "Add Option");

		CommerceEntry.gotoMenuTab(menuTab = "SKUs");

		CommerceSKUs.addSKU(optionValuesList = "Black:10.0,Blue:20.0,White:30.0");

		CommerceEntry.gotoMenuTab(menuTab = "Media");

		CommerceProductImages.addProductImages(optionValuesList = "Black,Blue,White");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specifications");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specification Groups");

		CommerceEntry.createNewSpecificationGroups(
			specificationDescription = "SpecificationGroups",
			specificationTitle = "SpecificationGroups");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.gotoCommercePortletNavItem(navItem = "Specifications");

		CommerceEntry.createNewSpecificationLabels(
			specificationDescription = "SpecificationLabel",
			specificationGroupTitle = "SpecificationGroups",
			specificationTitle = "SpecificationLabel");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.gotoEntry(entryName = "Simple T-Shirt");

		CommerceRelations.assignSingleRelationToProductsEntry(
			entryName = "SpecificationLabel",
			title = "Specifications");

		CommerceEntry.gotoMenuTab(menuTab = "Options");

		CommerceEntry.viewProductOptions(
			optionList = "Black,Blue,White",
			optionName = "Color");

		CommerceEntry.gotoMenuTab(menuTab = "SKUs");

		CommerceEntry.viewProductSkus(skusList = "WHITESKU:30.00,BLUESKU:20.00,BLACKSKU:10.00");
	}

	test TranslateProductName {
		property portal.acceptance = "quarantine";
		property test.name.skip.portal.instance = "CPCommerceProducts#TranslateProductName";

		CommerceAccelerators.initializeNewSiteViaAccelerator(siteName = "Minium");

		CommerceNavigator.gotoPortlet(
			category = "Product Management",
			portlet = "Products");

		CommerceNavigator.searchEntry(entryName = "Shock Absorber");

		CommerceNavigator.gotoEntry(entryName = "Shock Absorber");

		PortletEntry.changeLocale(
			fieldName = "Name",
			locale = "es-ES");

		Type(
			locator1 = "TextInput#NAME",
			value1 = "Amortiguador");

		Button.clickPublish();

		Navigator.openWithAppendToBaseURL(urlAppend = "web/minium");

		CommerceAcceleratorsInitializer.addPortlet(portletName = "Language Selector");

		LanguagePortlet.selectLanguagePG(
			locale = "es_ES",
			textIcon = "español-España");

		CommerceAcceleratorsInitializer.viewMiniumCardName(productName = "Amortiguador");

		CommerceAcceleratorsInitializer.viewMiniumCardName(productName = "U-Joint");

		CommerceAcceleratorsInitializer.viewMiniumCardName(productName = "Transmission Cooler Line Assembly");

		LanguagePortlet.selectLanguagePG(
			locale = "en_US",
			textIcon = "English-United States");
	}

}