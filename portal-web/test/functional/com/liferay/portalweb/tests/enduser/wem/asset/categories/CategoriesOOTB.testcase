@component-name = "portal-categories"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.component.names = "Categories";
	property testray.main.component.name = "Categories";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");

        Navigator.openURL();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "When a change in Global Vocabularies is made, the Global vocabularies section in a site's Categories administration application updates accordingly"
	@priority = "5"
	test UpdateGlobalCategories {
		property portal.acceptance = "true";
        
        JSONCategory.addCategory(
			groupName = "Global",
		    title = "Audience 1",
		    vocabularyName = "Audience");
            
        Category.openCategoriesAdmin(siteURLKey = "test-site-name");

        Category.viewCP(
	        categoryName = "Audience 1",
		    vocabularyName = "Audience");
            
        Category.deleteCategoriesCP(vocabularyName = "Audience 1");
	}

	@description = "When the site administrator (not Global) accesses to the Categories administration application, the existing Global vocabularies appear as locked and it's not possible to edit them"
	@priority = "5"
	test GlobalCategoriesNotEditable {
		property portal.acceptance = "true";
        JSONCategory.addCategory(
		    groupName = "Global",
		    title = "Audience 1",
    	    vocabularyName = "Audience");
            
        Category.openCategoriesAdmin(siteURLKey = "test-site-name");
            
        AssertElementPresent(locator1 = "Categories#LOCKED_VOCABULARY");

        Category.viewCP(
		    categoryName = "Audience 1",
		    vocabularyName = "Audience");
            
        AssertElementNotPresent(locator1 = "Categories#ADD_CATEGORY_BUTTON");
	}
}